@page "/movie/{id}/watchlists"
@using System.Security.Claims
@using CinemaSocial.Services
@inject AuthenticationStateProvider authenticationStateProvider
@inject WatchlistService WatchlistService
@rendermode InteractiveServer

<h3>Choose a Watchlist</h3>

@code {
    [Parameter] public string Id { get; set; }

    public Guid MovieId => Guid.Parse(Id);

    private int UserId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authState = await authenticationStateProvider.GetAuthenticationStateAsync();
        if (authState.User.Identity.IsAuthenticated)
        {
            var userIdClaim = authState.User.FindFirstValue(ClaimTypes.NameIdentifier);
            Console.WriteLine($"{userIdClaim} is the user id");
            if (userIdClaim == null)
            {
                Console.WriteLine("NameIdentifier claim is not present");
            }
            else
            {
                UserId = int.Parse(userIdClaim);
            }
        }
        else
        {
            Console.WriteLine("User is not authenticated");
        }
    }

}